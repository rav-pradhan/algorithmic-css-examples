:root {
    --off-blue: #e0e1e8;
    --off-black: #444546;

    --step-0: clamp(1.00rem, calc(0.91rem + 0.43cqw), 1.25rem);
    --step-1: clamp(1.13rem, calc(0.97rem + 0.76cqw), 1.56rem);
    --step-2: clamp(1.27rem, calc(1.03rem + 1.20cqw), 1.95rem);
    --step-3: clamp(1.42rem, calc(1.07rem + 1.77cqw), 2.44rem);
    --step-4: clamp(1.60rem, calc(1.10rem + 2.52cqw), 3.05rem);
    --step-5: clamp(1.80rem, calc(1.10rem + 3.50cqw), 3.82rem);
}

body {
    background-color: var(--off-blue);
}

* {
    font-family: AppleSystemUIFont, sans-serif;
}

h1, h2, p {
    color: var(--off-black);
}

h1 {
    font-size: var(--step-3);
}

h2 {
    font-size: var(--step-2);
}

h3 {
    font-size: var(--step-1);
}

p {
    font-size: var(--step-0);
    max-width: 60ch;
}

.container-context {
    container-type: inline-size;
}

.wrapper {
    position: relative;
    max-width: clamp(16rem, 94vw, 80rem);
    padding: 3rem 0;
    margin-left: auto;
    margin-right: auto;
}

.stack {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}

.stack > * {
    margin-block: 0;
}

.stack > * + * {
    margin-block-start: var(--space, 2em);
}

.flow {
    --space: 1em;
}

.flow :is(h1 + *) {
    --space: 2em;
}

#cluster-example .cluster {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: flex-start;
    align-items: center;
}

#cluster-example article {
    padding: 1rem;
    border: 2px solid var(--off-black);
    color: #fff;
    background-color: var(--off-black);
}

#cluster-example article * {
    color: inherit;
}

.step-5 {
    font-size: var(--step-5);
}

.step-4 {
    font-size: var(--step-4);
}

.step-3 {
    font-size: var(--step-3);
}

.step-2 {
    font-size: var(--step-2);
}

.step-1 {
    font-size: var(--step-1);
}

.step-0 {
    font-size: var(--step-0);
}


.switch-step {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
}

/*noinspection CssInvalidPropertyValue*/
.switch-step > * {
    flex-grow: 1;
    flex-basis: calc((42rem - 100%) * 999);
}

.switch-step > :nth-last-child(n+ 4),
.switch-step > :nth-last-child(n+ 4) ~ * {
    flex-basis: 100%;
}

article {
    padding: 2rem;
    border: 2px solid var(--off-black);
    color: #fff;
    background-color: var(--off-black);
    text-align: center;
}

article * {
    color: inherit;
}

.grid {
    display: grid;
    grid-gap: 1.5rem;
    grid-template-columns: repeat(auto-fit, minmax(min(200px, 100%), 1fr));
}

pre {
    margin: 0;
}

code {
    font-family: monospace;
    font-size: 1.05rem;
    padding: 0.1rem;
    letter-spacing: 1px;
}

details {
    margin-top: 1rem;

}
